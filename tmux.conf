unbind-key C-b
set -g prefix C-t
bind-key C-t send-prefix

set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",*256col*:Tc"
set -ag terminal-overrides ",alacritty:RGB"
setw -g mouse on
set-window-option -g mode-keys vi
set -s escape-time 0

bind -T prefix q display-panes -d 0

#+--------+
#+ Status +
#+--------+
set -g status-left-length 100
set -g status-right-length 100

set -g status-interval 1

#+--- Layout ---+
set -g status-justify left

#+--- Colors ---+
set -g status-style bg=black,fg=white

#+--- Bars ---+
set -g status-left "#[fg=#17171b,bold]#{?client_prefix,#[bg=#cdd1e6],#[bg=#818596]} #S #[bg=black,nobold]#{?client_prefix,#[fg=#cdd1e6],#[fg=#818596]}"
set -g status-right "#[fg=#2e313f,bg=black]#[fg=#6b7089,bg=#2e313f] %m/%d  %H:%M:%S #[fg=#818596,bg=#2e313f]#[fg=#17171b,bg=#818596,bold] #H "

#+--- Windows ---+
set -g base-index 1
set -g window-status-format "#[fg=black,bg=#2e313f] #[fg=#6b7089,bg=#2e313f]#I  #W #F #[fg=#2e313f,bg=black]"
set -g window-status-current-format "#[fg=black,bg=#84a0c6] #[fg=#161821,bg=#84a0c6]#I  #W #F #[fg=#84a0c6,bg=black]"
set -g window-status-separator ""

#+-------+
#+ Panes +
#+-------+
set -g pane-base-index 1
set -g pane-border-style bg=default,fg=colour233
set -g pane-active-border-style bg=default,fg=brightblack
set -g display-panes-colour brightblack
set -g display-panes-active-colour blue

set -g pane-border-status top
set -g pane-border-format "#[fg=black]#{?pane_active, #{?pane_pipe,#[bg=yellow],#[bg=blue]}, #[bg=colour248]} #P #{pane_current_command}#{?pane_active, #{?pane_pipe,#[fg=yellow],#[fg=blue]}, #[fg=colour248]}#[bg=colour240]#(zsh ~/.tmux/tmux-pane-status.sh #{pane_current_command} #{pane_pid} #{pane_current_path})"

#+------------+
#+ Clock Mode +
#+------------+
setw -g clock-mode-colour blue

#+----------+
#+ Messages +
#+---------+
set -g message-style fg="#161821",bg="#84a0c6"
set -g message-command-style fg="#161821",bg="#84a0c6"

#+---------+
#+ Keybind +
#+---------+

bind -r n next-window
bind -r p previous-window

bind -r < swap-window -t -1\; select-window -t -1
bind -r > swap-window -t +1\; select-window -t +1
bind @ split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind c-h split-window -hb -c '#{pane_current_path}'
bind c-j split-window -v -c '#{pane_current_path}'
bind c-k split-window -vb -c '#{pane_current_path}'
bind c-l split-window -h -c '#{pane_current_path}'

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "cat | <COPYBIN>"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "cat | <COPYBIN>"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R

